{
  "openapi": "3.0.3",
  "info": {
    "title": "Title",
    "description": "Title",
    "version": "3.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3333/api"
    }
  ],
  "paths": {
    "/user/": {
      "post": {
        "operationId": "createUser",
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid user supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getUsers",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid user supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of user to fetch",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "get": {
        "operationId": "getUser",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "A single user item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateUser",
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid user supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUser",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid user supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}/subscription": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of the user to subscribe",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "get user subscription",
        "operationId": "getUserSubscription",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid user supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "update user subscription",
        "operationId": "updateUserSubscription",
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid user supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "delete user subscription",
        "operationId": "deleteUserSubscription",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            },
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid user supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "description": "Login",
        "operationId": "login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout",
        "description": "Logout",
        "operationId": "logout",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register",
        "description": "Register",
        "operationId": "register",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "telephone": {
                    "type": "string",
                    "pattern": "^[0-9]{10}$"
                  },
                  "countryId": {
                    "type": "number"
                  },
                  "CGU": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "firstName",
                  "lastName",
                  "telephone",
                  "CGU"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/verify": {
      "get": {
        "description": "Verify code in query params",
        "operationId": "verify",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Verification code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Auth"
        ],
        "summary": "Verify",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/verifyNewUser": {
      "get": {
        "description": "Generate a new verification code of type in query params",
        "operationId": "verifyNew",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of verification code",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "EMAIL",
                "PHONE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Auth"
        ],
        "summary": "VerifyNew",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/password/forgot": {
      "post": {
        "description": "Forgot password",
        "operationId": "forgotPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email of the user"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Auth"
        ],
        "summary": "ForgotPassword"
      }
    },
    "/auth/password/reset": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Reset password with a code and new password",
        "operationId": "resetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  },
                  "confirmPassword": {
                    "type": "string"
                  }
                },
                "required": [
                  "code",
                  "newPassword",
                  "confirmPassword"
                ]
              }
            }
          },
          "description": "Reset password with a code and new password",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/password/change": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Change password",
        "operationId": "changePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "oldPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  },
                  "confirmPassword": {
                    "type": "string"
                  }
                },
                "required": [
                  "oldPassword",
                  "newPassword",
                  "confirmPassword"
                ]
              }
            }
          },
          "description": "Change password",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/theme": {
      "post": {
        "tags": [
          "Themes"
        ],
        "summary": "Create theme",
        "description": "Create theme",
        "operationId": "createTheme",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Theme not found"
          },
          "405": {
            "description": "Validation exception"
          },
          "409": {
            "description": "Theme already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Themes"
        ],
        "summary": "Get all themes",
        "description": "Get all themes",
        "operationId": "getThemes",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Theme"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Theme not found"
          }
        }
      }
    },
    "/theme/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of user to fetch",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "get": {
        "tags": [
          "Themes"
        ],
        "summary": "Get theme",
        "description": "Get theme",
        "operationId": "getTheme",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Theme not found"
          }
        }
      },
      "put": {
        "tags": [
          "Themes"
        ],
        "summary": "Update theme",
        "description": "Update theme",
        "operationId": "updateTheme",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Theme not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Themes"
        ],
        "summary": "Delete theme",
        "description": "Delete theme",
        "operationId": "deleteTheme",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Theme not found"
          }
        }
      }
    },
    "/crypto": {
      "get": {
        "tags": [
          "crypto"
        ],
        "operationId": "getAllCrypto",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cryptos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CryptoHolding"
                      }
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "message": {
                            "type": "string"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "message",
                          "date"
                        ]
                      }
                    }
                  },
                  "required": [
                    "cryptos",
                    "messages"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Crypto not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/crypto/cryptos": {
      "put": {
        "tags": [
          "crypto"
        ],
        "operationId": "setCryptos",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CryptoHolding"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CryptoHolding"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Crypto not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/crypto/message": {
      "put": {
        "tags": [
          "crypto"
        ],
        "operationId": "setMessage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Crypto not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/crypto/searchCoin": {
      "get": {
        "tags": [
          "crypto"
        ],
        "operationId": "searchCrypto",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Search query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CryptoHolding"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Crypto not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/crypto/{id}/value": {
      "get": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Crypto ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "crypto"
        ],
        "operationId": "getCoinValue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Crypto not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/crypto/coinImg/{id}": {
      "get": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Crypto ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "crypto"
        ],
        "operationId": "getCryptoImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "image": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Crypto not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/trader/curation": {
      "get": {
        "tags": [
          "traders"
        ],
        "operationId": "getTraderCuration",
        "description": "Get curation",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Trader"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "traders"
        ],
        "operationId": "updateTraderCuration",
        "description": "Update curation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Trader"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trader"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/trader/trader/{id}/follow": {
      "post": {
        "tags": [
          "traders"
        ],
        "description": "Follow a trader",
        "operationId": "followTrader",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Trader ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trader"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "traders"
        ],
        "operationId": "unfollowTrader",
        "description": "Unfollow a trader",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Trader ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trader"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/trader/trader/following": {
      "get": {
        "tags": [
          "traders"
        ],
        "operationId": "getTraderFollowing",
        "description": "Get the list of traders followed by the current user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Trader"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/trader/trader/{id}/followers": {
      "get": {
        "tags": [
          "traders"
        ],
        "operationId": "getTraderFollowers",
        "description": "get a list of user following a trader",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Trader ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Trader"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/article/": {
      "post": {
        "tags": [
          "Article"
        ],
        "description": "Create article",
        "operationId": "createArticle",
        "requestBody": {
          "description": "Article object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Article"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Article response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Article"
        ],
        "description": "Get all articles",
        "operationId": "getArticles",
        "responses": {
          "200": {
            "description": "Articles response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/article/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The ID of the article",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "get": {
        "tags": [
          "Article"
        ],
        "description": "Get article by id",
        "operationId": "getArticleById",
        "responses": {
          "200": {
            "description": "Article response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Article"
        ],
        "description": "Update article by id",
        "operationId": "updateArticleById",
        "requestBody": {
          "description": "Article object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Article"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Article response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Article"
        ],
        "description": "Delete article by id",
        "operationId": "deleteArticleById",
        "responses": {
          "204": {
            "description": "Article deleted"
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscription/": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "description": "Create a subscription",
        "operationId": "createSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          },
          "description": "Subscription object that needs to be created",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Subscription"
        ],
        "description": "Get all subscriptions",
        "operationId": "getSubscriptions",
        "responses": {
          "200": {
            "description": "List of subscriptions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscription/{id}": {
      "parameters": [
        {
          "description": "Subscription id",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": [
          "Subscription"
        ],
        "description": "Get a subscription by id",
        "operationId": "getSubscriptionById",
        "responses": {
          "200": {
            "description": "A single subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscription"
        ],
        "description": "Update a subscription by id",
        "operationId": "updateSubscriptionById",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          },
          "description": "Subscription object that needs to be updated",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscription"
        ],
        "description": "Delete a subscription by id",
        "operationId": "deleteSubscriptionById",
        "responses": {
          "204": {
            "description": "Successfully deleted"
          }
        }
      }
    },
    "/country": {
      "get": {
        "description": "Get country list",
        "tags": [
          "Country"
        ],
        "operationId": "getCountryList",
        "responses": {
          "200": {
            "description": "A list of countries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "description": "Create new country",
        "tags": [
          "Country"
        ],
        "operationId": "createCountry",
        "requestBody": {
          "description": "Country object that needs to be added",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A single country",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/country/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The ID of a country",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Get country by ID",
        "tags": [
          "Country"
        ],
        "operationId": "getCountryById",
        "responses": {
          "200": {
            "description": "A single country",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Country not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "description": "Update country by ID",
        "tags": [
          "Country"
        ],
        "operationId": "updateCountryById",
        "requestBody": {
          "description": "Country object that needs to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A single country",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Country not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "description": "Delete country by ID",
        "tags": [
          "Country"
        ],
        "operationId": "deleteCountryById",
        "responses": {
          "204": {
            "description": "Country deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Country not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/payment/": {
      "get": {
        "description": "Get all user subscriptions",
        "tags": [
          "Payment"
        ],
        "operationId": "getPayments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSubscription"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "description": "Create a new subscription",
        "tags": [
          "Payment"
        ],
        "operationId": "createPayment",
        "requestBody": {
          "description": "Payment object that needs to be added to the store",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subscriptionId": {
                    "type": "string",
                    "description": "Subscription ID"
                  },
                  "offerId": {
                    "type": "string",
                    "description": "Offer ID"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSubscription"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/payment/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Subscription ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Get a single subscription",
        "tags": [
          "Payment"
        ],
        "operationId": "getPaymentById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSubscription"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "description": "Update a subscription",
        "tags": [
          "Payment"
        ],
        "operationId": "updatePayment",
        "requestBody": {
          "description": "Payment object that needs to be updated in the store",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subscriptionId": {
                    "type": "string",
                    "description": "Subscription ID"
                  },
                  "offerId": {
                    "type": "string",
                    "description": "Offer ID"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSubscription"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "description": "Delete a subscription",
        "tags": [
          "Payment"
        ],
        "operationId": "deletePayment",
        "responses": {
          "204": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSubscription"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/payment/payment/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Subscription ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Get a single subscription",
        "tags": [
          "Payment"
        ],
        "operationId": "fetchPaymentById",
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/offer/": {
      "get": {
        "description": "Get all offers",
        "tags": [
          "Offers"
        ],
        "operationId": "getAllOffers",
        "responses": {
          "200": {
            "description": "Offers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Offer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "description": "Create offer",
        "tags": [
          "Offers"
        ],
        "operationId": "createOffer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Offer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Offer created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/offer/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Offer ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Get offer by id",
        "tags": [
          "Offers"
        ],
        "operationId": "getOfferById",
        "responses": {
          "200": {
            "description": "Offer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Offer not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "description": "Update offer by id",
        "tags": [
          "Offers"
        ],
        "operationId": "updateOfferById",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Offer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Offer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Offer not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "description": "Delete offer by id",
        "tags": [
          "Offers"
        ],
        "operationId": "deleteOfferById",
        "responses": {
          "204": {
            "description": "Offer deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Offer not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/offer/usage/{id}": {
      "get": {
        "description": "Get usage by ID",
        "tags": [
          "Usage"
        ],
        "operationId": "getUsageById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Usage ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfferUsage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/offer/usage/": {
      "get": {
        "description": "Get all usage",
        "tags": [
          "Usage"
        ],
        "operationId": "getAllUsage",
        "responses": {
          "200": {
            "description": "Usage",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OfferUsage"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/affiliation/": {
      "post": {
        "tags": [
          "Affiliation"
        ],
        "summary": "Create Affiliation",
        "description": "Create Affiliation",
        "operationId": "createAffiliation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Affiliation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Affiliation created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Affiliation"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Affiliation"
        ],
        "summary": "Get Affiliation",
        "description": "Get Affiliation",
        "operationId": "getAffiliation",
        "responses": {
          "200": {
            "description": "Affiliation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Affiliation"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Affiliation not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/affiliation/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Affiliation"
        ],
        "summary": "Get Affiliation",
        "description": "Get Affiliation",
        "operationId": "getAffiliationById",
        "responses": {
          "200": {
            "description": "Affiliation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Affiliation"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Affiliation not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Affiliation"
        ],
        "summary": "Update Affiliation",
        "description": "Update Affiliation",
        "operationId": "updateAffiliation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Affiliation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Affiliation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Affiliation"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Affiliation not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Affiliation"
        ],
        "summary": "Delete Affiliation",
        "description": "Delete Affiliation",
        "operationId": "deleteAffiliation",
        "responses": {
          "204": {
            "description": "Affiliation deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Affiliation not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "nullable": false
          },
          "userId": {
            "type": "string",
            "nullable": false
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          },
          "countryId": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "verifiedEmail": {
            "type": "boolean"
          },
          "verifiedPhone": {
            "type": "boolean"
          },
          "banned": {
            "type": "boolean"
          },
          "UserSubscription": {
            "type": "object",
            "properties": {
              "Subscription": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "Theme": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "subscriptionLevel": {
            "type": "integer"
          },
          "icon": {
            "type": "string",
            "format": "binary"
          },
          "iconUrl": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "CryptoHolding": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "price_usd": {
            "type": "number"
          }
        }
      },
      "Trader": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string",
            "nullable": false
          },
          "clientId": {
            "type": "string",
            "nullable": false
          },
          "displayed": {
            "type": "boolean",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Article": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "themeId": {
            "type": "string"
          },
          "recommendedArticleIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ArticleRecommandation": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Recommandation": {
                  "type": "object",
                  "properties": {
                    "Article": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "content": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "themesId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "banner": {
            "type": "string",
            "format": "binary"
          },
          "header": {
            "type": "string",
            "format": "binary"
          },
          "bannerUrl": {
            "type": "string"
          },
          "headerUrl": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "hidden",
          "createdAt",
          "updatedAt",
          "themeId"
        ]
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "refreshRate": {
            "type": "integer"
          },
          "subscriptionType": {
            "type": "string"
          },
          "price": {
            "type": "integer"
          },
          "level": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "description",
          "subscriptionType",
          "price",
          "level"
        ]
      },
      "Country": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "code",
          "enabled",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserSubscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "subscriptionId": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "paymentId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "Affiliation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "displayed": {
            "type": "boolean"
          }
        }
      },
      "Offer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "value": {
            "type": "integer"
          },
          "offerType": {
            "type": "string",
            "enum": [
              "PERCENTAGE",
              "FIXED"
            ]
          },
          "subscriptionId": {
            "type": "integer"
          },
          "singleUse": {
            "type": "boolean"
          }
        }
      },
      "OfferUsage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "offerId": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}
