services:
  db:
    image: postgres:9.6
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    volumes:
      - "./data/postgres:/var/lib/postgresql/data"
    restart: unless-stopped

  cache:
    image: redis:alpine
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: "redis"
      REDIS_DB: "0"
    volumes:
      - "./data/redis:/data"
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    ports:
      - "8080:3333"
    depends_on:
      - db
    environment:
      DB_HOST: "db"
      DB_PORT: "5432"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
      DB_NAME: "postgres"
      UPLOAD_DIR: "/uploads"
      SMS_API_KEY: ""
    volumes:
      - "./data/uploads:/uploads"
    restart: unless-stopped

  client:
    build:
      context: .
      dockerfile: docker/client/Dockerfile
      args:
        - SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN
    ports:
      - "3000:3000"
    #    depends_on:
    #      - api
    #    links:
    #      - api
    restart: unless-stopped

  dashboard:
    build:
      context: .
      dockerfile: docker/dashboard/Dockerfile
      args:
        - SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN
    ports:
      - "3001:3000"
    depends_on:
      - api
    links:
      - api
    restart: unless-stopped

  bot:
    build:
      context: .
      dockerfile: docker/bot/Dockerfile
    environment:
      REDIS_URL: "redis://redis:6379@redis:6379/0"
      APIFY_TOKEN: ""
      TELEGRAM_TOKEN: ""
    depends_on:
      - api
      - cache
    links:
      - api
      - cache
    restart: unless-stopped
