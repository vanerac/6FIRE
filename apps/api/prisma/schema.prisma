// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum VerificationType {
  EMAIL
  PHONE
}

model User {
  id                Int                 @id @default(autoincrement())
  userId            String              @unique @default(uuid())
  firstName         String
  lastName          String
  email             String
  password          String
  telephone         String
  countryId         Int
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @default(now())
  isAdmin           Boolean             @default(false)
  verifiedEmail     Boolean             @default(false)
  verifiedPhone     Boolean             @default(false)
  banned            Boolean             @default(false)
  country           Country             @relation(fields: [countryId], references: [id])
  VerificationCodes VerificationCodes[]
}

model VerificationCodes {
  id        Int              @id @default(autoincrement())
  userId    Int
  code      String
  type      VerificationType
  createdAt DateTime         @default(now())
  updatedAt DateTime         @default(now())
  User      User             @relation(fields: [userId], references: [id])
}

model Subscription {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Int
  level       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model Theme {
  id                Int       @id @default(autoincrement())
  name              String
  subscriptionLevel Int
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @default(now())
  Article           Article[]
}

model Article {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  hidden    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  themesId  Int
  Theme     Theme    @relation(fields: [themesId], references: [id])

}

model Country {
  id        Int      @id @default(autoincrement())
  name      String
  code      String
  enabled   Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  User      User[]
}
